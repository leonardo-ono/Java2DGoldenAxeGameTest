package infra;


import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 * Golden Axe - Title screen test
 * 
 * @author Leonardo Ono (ono.leo80@gmail.com);
 */
public class View extends JPanel {
    
    private AlphaComposite[] alphaComposites = new AlphaComposite[256];
    
    double by = 0;
    double bvy = 0;
    long changeBDirectionTime;
    boolean bDirectionChanged;
    double balpha = 255;
    
    double ky = 100;
    
    private List<Sprite1> sprites = new ArrayList<>();
    
    public View() {
        for (int i = 0; i < 256; i++) {
            alphaComposites[i] = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, i / 255f);
        }
    }

    public void start() {
        Resource.loadSpriteSheet("/res/image/title.png", "/res/image/sprite_sheet.txt");
        addKeyListener(new Input());
        bvy = 4;
        changeBDirectionTime = System.currentTimeMillis() + 3700;
        bDirectionChanged = false;
        
        // add all sprites with "z order"
        sprites.add(Resource.getSprite("kanji")[0]);
        for (int i = 0; i < 9; i++) {
            sprites.add(Resource.getSprite("letter")[i]);
        }
        
        Audio.start();
        //Audio.loadMusic(1, "/res/music/intro.mid");
        //Audio.playMusic(1);
        
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        update();
        draw((Graphics2D) g);
        try {
            Thread.sleep(1000 / 60);
        } catch (InterruptedException ex) {
        }
        repaint();
    }
    
    private void update() {
        by += bvy;
        
        if (bvy > 0 && by > 207) {
            by -= 207;
        }
        if (bvy < 0 && by < 0) {
            by += 207;
        }
        
        if (!bDirectionChanged && System.currentTimeMillis() >= changeBDirectionTime) {
            bvy -= 0.1;
            if (bvy < -1) {
                bDirectionChanged = true;
                bvy = -1;
            }
        }

        if (System.currentTimeMillis() >= changeBDirectionTime) {
            balpha -= 8;
            if (balpha < 0) {
                balpha = 0;
            }
        }
        
        for (int i = 0; i < letterIndexes.length; i++) {
            letterIndexes[i] += 2;
            if (letterIndexes[i] > letters[i].length - 1) {
                letterIndexes[i] = letters[i].length - 2;
            }
        }
        
        ky -= 1;
        if (ky < 0) {
            ky = 0;
        }
    }
    
    private void draw(Graphics2D g) {
        g.clearRect(0, 0, getWidth(), getHeight());
        g.drawLine(0, 0, getWidth(), getHeight());
        
        g.scale(2.5, 2.5);
        
        Resource.getSprite("background_darker")[0].draw(g, 0, (int) (-207 + by), false);
        //Resource.getSprite("background_darker")[0].draw(g, 0, (int) (0 + by), false);
        
        Composite originalComposite = g.getComposite();
        g.setComposite(alphaComposites[(int) balpha]);
        Resource.getSprite("background")[0].draw(g, 0, (int) (-207 + by), false);
        //Resource.getSprite("background")[0].draw(g, 0, (int) (0 + by), false);
        g.setComposite(originalComposite);
        
        //Resource.getSprite("kanji")[0].draw(g, 35, (int) (16 + ky), false);
        Resource.getSprite("kanji")[0].set(35, (int) (16 + ky));
        Resource.getSprite("kanji")[0].setZ(55);
        
        int lx = 357, ly = 256;
        for (int li = 0; li < letters.length; li++) {
            try {
                //Resource.getSprite("letter")[li].draw(g, letters[li][letterIndexes[li]] - lx, letters[li][letterIndexes[li] + 1] - ly, false);
                Resource.getSprite("letter")[li].set(letters[li][letterIndexes[li]] - lx, letters[li][letterIndexes[li] + 1] - ly);
                Resource.getSprite("letter")[li].setZ(letters[li][letterIndexes[li] + 1] - ly);
            }
            catch (Exception e) {
                System.out.println("error");
            }
        }
        
        Collections.sort(sprites);
        sprites.forEach(sprite -> sprite.draw(g, false));
        
//        Resource.getSprite("letter")[0].draw(g, 24 + 16 - 16, 105, false);
//        Resource.getSprite("letter")[1].draw(g, 24 + 40 - 16, 105, false);
//        Resource.getSprite("letter")[2].draw(g, 24 + 64 - 16, 105, false);
//        Resource.getSprite("letter")[3].draw(g, 24 + 88 - 16, 105, false);
//        Resource.getSprite("letter")[4].draw(g, 24 + 112 - 16, 105, false);
//        Resource.getSprite("letter")[5].draw(g, 24 + 136 - 16, 105, false);
//        Resource.getSprite("letter")[6].draw(g, 24 + 172 - 16, 105, false);
//        Resource.getSprite("letter")[7].draw(g, 24 + 196 - 16, 105, false);
//        Resource.getSprite("letter")[8].draw(g, 24 + 220 - 16, 105, false);

        
        if (balpha == 0) {
            //Resource.getSprite("sega")[0].draw(g, 105, 174, false);
            Resource.getSprite("sega")[0].draw(g, 10, 176, false);

            Resource.getSprite("blood")[0].draw(g, 125, 19, false);

            Text.draw(g, "(C)SEGA 1989", 20, 18, Color.WHITE, Color.RED);
            Text.draw(g, "(C)O.L. 2021", 20, 19, Color.WHITE, Color.RED);

            if (((int) (System.nanoTime() * 0.000000005)) % 3 < 2) {
                Text.draw(g, "PRESS SPACE TO START", 5, 16, Color.WHITE, Color.BLUE);
            }
        }
        
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            View view = new View();
            view.setPreferredSize(new Dimension((int) (276 * 2.5), (int) (207 * 2.5)));
            JFrame frame = new JFrame();
            frame.setTitle("Java Golden Axe - Title Screen / Test #5");
            frame.getContentPane().add(view);
            frame.setResizable(false);
            frame.pack();
            //frame.setLocationRelativeTo(null);
            frame.setLocation(150, 100);
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setVisible(true);
            view.requestFocus();
            view.start();
        });
    }
    
    private int letterIndexes[] = new int[9];
int[][] letters = { 
{ 660,455,650,454,640,453,630,452,620,451,610,451,600,450,590,449,580,448,570,447,560,446,550,445,540,445,530,444,520,442,510,440,500,438,491,436,481,434,471,432,461,430,451,428,442,426,432,424,422,422,413,419,403,416,394,412,384,409,375,406,366,402,356,398,348,394,339,389,330,383,323,377,316,370,311,361,308,351,309,342,312,332,318,324,325,317,333,311,341,305,350,300,359,297,368,293,378,291,388,289,398,288,408,287,418,286,428,285,438,284,448,284,458,284,468,283,478,283,488,283,498,283,508,284,518,284,528,285,538,285,548,286,557,287,567,289,577,290,587,292,597,295,606,297,615,303,621,311,621,320,614,328,606,333,596,336,586,339,577,340,567,342,557,343,547,344,537,345,527,346,517,346,507,347,497,347,487,347,477,347,467,347,457,347,447,346,437,346,427,346,417,345,407,344,397,342,387,341,377,340,368,337,358,335,349,331,341,325,336,316,339,307,346,300,355,295,364,292,374,291,384,289,394,288,404,286,414,285,424,285,434,284,444,284,454,283,464,283,474,283,484,283,494,283,504,283,514,283,524,284,534,285,544,286,554,287,564,288,573,289,583,291,593,293,603,296,612,299,619,306,622,316,622,325,617,334,609,340,600,344,590,345,580,346,570,347,560,348,550,349,540,349,530,350,520,351,510,351,500,352,490,353,480,354,470,354,460,355,450,356,440,356,430,357,421,358,411,358,401,359,383,360,381,360,381,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,660,455,650,454,640,453,630,452,620,451,610,451,600,450,590,449,580,448,570,447,560,446,550,445,540,445,530,444,520,442,510,440,500,438,491,436,481,434,471,432,461,430,451,428,442,426,432,424,422,422,413,419,403,416,394,412,384,409,375,406,366,402,356,398,348,394,339,389,330,383,323,377,316,370,311,361,308,351,309,342,312,332,318,324,325,317,333,311,341,305,350,300,359,297,368,293,378,291,388,289,398,288,408,287,418,286,428,285,438,284,448,284,458,284,468,283,478,283,488,283,498,283,508,284,518,284,528,285,538,285,548,286,557,287,567,289,577,290,587,292,597,295,606,297,615,303,621,311,621,320,614,328,606,333,596,336,586,339,577,340,567,342,557,343,547,344,537,345,527,346,517,346,507,347,497,347,487,347,477,347,467,347,457,347,447,346,437,346,427,346,417,345,407,344,397,342,387,341,377,340,368,337,358,335,349,331,341,325,336,316,339,307,346,300,355,295,364,292,374,291,384,289,394,288,404,286,414,285,424,285,434,284,444,284,454,283,464,283,474,283,484,283,494,283,504,283,514,283,524,284,534,285,544,286,554,287,564,288,573,289,583,291,593,293,603,296,612,299,619,306,622,316,622,325,617,334,609,340,600,344,590,345,580,347,570,347,560,348,550,349,540,350,530,351,520,351,510,352,500,353,490,354,480,355,470,355,461,356,451,357,441,358,431,358,421,359,405,360,405,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,662,455,652,454,642,453,632,452,622,452,612,451,602,450,592,449,582,448,572,447,562,446,552,446,542,445,532,444,522,443,512,441,502,439,493,437,483,435,473,433,463,431,453,429,444,427,434,425,424,423,415,420,405,416,396,413,386,410,377,406,367,403,358,399,349,395,340,390,332,385,324,378,317,371,312,363,308,353,308,343,311,334,317,326,324,319,331,312,339,306,348,301,357,297,367,294,376,291,386,289,396,288,406,287,416,286,426,285,436,284,446,284,456,284,466,283,476,283,486,283,496,283,506,284,516,284,526,284,536,285,546,286,555,287,565,289,575,290,585,292,595,294,605,297,613,302,620,309,621,319,616,327,607,332,598,336,588,338,579,340,569,342,559,343,549,344,539,345,529,346,519,346,509,346,499,347,489,347,479,347,469,347,459,347,449,346,439,346,429,346,419,345,409,344,399,343,389,342,379,340,370,338,360,336,350,332,342,326,337,318,338,309,344,301,353,296,362,293,372,291,382,289,392,288,402,287,412,286,422,285,432,284,442,284,452,284,462,283,472,283,482,283,492,283,502,283,512,283,522,284,532,284,542,285,552,286,562,288,571,289,581,291,591,293,601,295,610,299,618,304,622,314,623,324,618,332,611,339,602,343,592,345,582,347,572,348,562,349,552,349,542,350,532,351,522,352,512,353,503,354,493,355,483,356,473,357,463,357,453,358,437,360,429,360,429,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,664,455,654,454,644,454,634,453,624,452,614,451,604,450,594,449,584,448,574,448,564,447,554,446,544,445,534,444,524,443,514,441,504,439,495,437,485,435,475,433,465,431,455,429,446,427,436,425,426,423,416,420,407,417,398,414,388,410,379,407,369,404,360,400,351,396,342,391,334,386,326,380,318,373,313,365,309,355,308,345,310,336,316,327,322,320,330,313,337,307,346,302,355,298,365,295,374,292,384,290,394,288,404,287,414,286,424,285,434,284,444,284,454,284,464,283,474,283,484,283,494,283,504,283,514,284,524,284,534,285,544,286,554,287,563,288,573,290,583,291,593,294,603,296,612,300,619,307,622,317,617,325,609,331,600,335,590,338,581,340,571,341,561,343,551,344,541,345,531,346,521,346,511,346,501,347,491,347,481,347,471,347,461,347,451,346,441,346,431,346,421,345,411,344,401,343,391,342,381,340,372,338,362,336,352,333,344,328,337,320,337,310,343,302,351,297,361,294,370,291,380,290,390,288,400,287,410,286,420,285,430,285,440,284,450,284,460,283,470,283,480,283,490,283,500,283,510,283,520,284,530,284,540,285,550,286,560,287,570,289,579,290,589,292,599,294,608,298,617,303,621,312,623,322,620,331,612,338,604,343,594,345,584,347,574,348,564,349,554,350,544,351,535,352,525,353,515,354,505,355,495,356,485,357,475,358,457,360,453,360,453,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,665,455,656,455,646,454,636,453,626,452,616,451,606,450,596,449,586,449,576,448,566,447,556,446,546,445,536,444,526,443,516,442,506,440,497,438,487,436,477,434,467,432,457,430,448,428,438,426,428,424,418,421,409,418,399,414,390,411,381,408,371,404,362,401,353,396,344,392,335,387,327,381,320,374,314,366,309,357,308,347,310,338,314,329,321,321,328,314,336,308,344,303,353,299,363,295,372,292,382,290,392,289,402,287,412,286,422,285,432,284,442,284,452,284,462,283,472,283,482,283,492,283,502,283,512,284,522,284,532,285,542,286,552,287,561,288,571,289,581,291,591,293,601,296,610,299,617,306,622,315,619,324,611,330,602,334,592,338,583,340,573,341,563,342,553,344,543,345,533,346,523,346,513,346,503,347,493,347,483,347,473,347,463,347,453,346,443,346,433,346,423,345,413,344,403,343,393,342,383,341,373,339,364,336,354,334,346,329,338,322,336,312,341,304,349,298,359,294,368,292,378,290,388,288,398,287,408,286,418,285,428,285,438,284,448,284,458,283,468,283,478,283,488,283,498,283,508,283,518,283,528,284,538,285,548,286,558,287,568,288,577,290,587,292,597,294,606,297,615,301,621,310,623,320,621,329,614,337,606,342,596,345,586,347,576,348,566,349,557,351,547,352,537,353,527,354,517,356,507,357,497,358,479,360,477,360,477,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,666,455,658,455,648,454,638,453,628,452,618,451,608,450,598,450,588,449,578,448,568,447,558,446,548,445,538,444,528,443,518,442,508,440,499,438,489,436,479,434,469,432,459,430,450,428,440,426,430,424,420,421,411,418,401,415,392,412,382,408,373,405,364,402,355,397,346,393,337,388,329,382,321,375,315,368,310,359,308,349,309,340,313,331,320,323,327,316,334,309,342,304,351,299,361,296,370,293,380,290,390,289,400,288,410,286,420,285,430,285,440,284,450,284,460,283,470,283,480,283,490,283,500,283,510,284,520,284,530,285,540,285,550,286,559,288,569,289,579,291,589,293,599,295,608,298,616,304,621,313,620,322,613,329,604,334,594,337,585,339,575,341,565,342,555,343,545,345,535,345,525,346,515,346,505,347,495,347,485,347,475,347,465,347,455,347,445,346,435,346,425,345,415,344,405,343,395,342,385,341,375,339,366,337,356,335,347,330,340,323,336,314,340,305,348,299,357,295,366,292,376,290,386,289,396,287,406,286,416,285,426,285,436,284,446,284,456,283,466,283,476,283,486,283,496,283,506,283,516,283,526,284,536,285,546,286,556,287,566,288,575,290,585,291,595,294,605,296,614,300,620,308,623,318,622,327,616,335,607,341,598,345,588,347,579,349,569,350,559,352,549,353,539,355,529,356,519,358,502,360,501,361,501,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,660,455,650,454,640,453,630,452,620,451,610,451,600,450,590,449,580,448,570,447,560,446,550,445,540,445,530,444,520,442,510,440,500,438,491,436,481,434,471,432,461,430,451,428,442,426,432,424,422,422,413,419,403,416,394,412,384,409,375,406,366,402,356,398,348,394,339,389,330,383,323,377,316,370,311,361,308,351,309,342,312,332,318,324,325,317,333,311,341,305,350,300,359,297,368,293,378,291,388,289,398,288,408,287,418,286,428,285,438,284,448,284,458,284,468,283,478,283,488,283,498,283,508,284,518,284,528,285,538,285,548,286,557,287,567,289,577,290,587,292,597,295,606,297,615,303,621,311,621,320,614,328,606,333,596,336,586,339,577,340,567,342,557,343,547,344,537,345,527,346,517,346,507,347,497,347,487,347,477,347,467,347,457,347,447,346,437,346,427,346,417,345,407,344,397,342,387,341,377,340,368,337,358,335,349,331,341,325,336,316,339,307,346,300,355,295,364,292,374,291,384,289,394,288,404,286,414,285,424,285,434,284,444,284,454,283,464,283,474,283,484,283,494,283,504,283,514,283,524,284,534,285,544,286,554,287,564,288,573,289,583,291,593,293,603,296,612,299,619,306,622,316,622,325,617,334,609,340,600,344,591,347,581,350,571,352,562,355,545,359,537,360,537,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,662,455,652,454,642,453,632,452,622,452,612,451,602,450,592,449,582,448,572,447,562,446,552,446,542,445,532,444,522,443,512,441,502,439,493,437,483,435,473,433,463,431,453,429,444,427,434,425,424,423,415,420,405,416,396,413,386,410,377,406,367,403,358,399,349,395,340,390,332,385,324,378,317,371,312,363,308,353,308,343,311,334,317,326,324,319,331,312,339,306,348,301,357,297,367,294,376,291,386,289,396,288,406,287,416,286,426,285,436,284,446,284,456,284,466,283,476,283,486,283,496,283,506,284,516,284,526,284,536,285,546,286,555,287,565,289,575,290,585,292,595,294,605,297,613,302,620,309,621,319,616,327,607,332,598,336,588,338,579,340,569,342,559,343,549,344,539,345,529,346,519,346,509,346,499,347,489,347,479,347,469,347,459,347,449,346,439,346,429,346,419,345,409,344,399,343,389,342,379,340,370,338,360,336,350,332,342,326,337,318,338,309,344,301,353,296,362,293,372,291,382,289,392,288,402,287,412,286,422,285,432,284,442,284,452,284,462,283,472,283,482,283,492,283,502,283,512,283,522,284,532,284,542,285,552,286,562,288,571,289,581,291,591,293,601,295,610,299,618,304,622,314,623,324,618,332,611,339,602,344,593,348,584,352,568,358,561,360,561,360}, 
{ 667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,667,456,664,455,654,454,644,454,634,453,624,452,614,451,604,450,594,449,584,448,574,448,564,447,554,446,544,445,534,444,524,443,514,441,504,439,495,437,485,435,475,433,465,431,455,429,446,427,436,425,426,423,416,420,407,417,398,414,388,410,379,407,369,404,360,400,351,396,342,391,334,386,326,380,318,373,313,365,309,355,308,345,310,336,316,327,322,320,330,313,337,307,346,302,355,298,365,295,374,292,384,290,394,288,404,287,414,286,424,285,434,284,444,284,454,284,464,283,474,283,484,283,494,283,504,283,514,284,524,284,534,285,544,286,554,287,563,288,573,290,583,291,593,294,603,296,612,300,619,307,622,317,617,325,609,331,600,335,590,338,581,340,571,341,561,343,551,344,541,345,531,346,521,346,511,346,501,347,491,347,481,347,471,347,461,347,451,346,441,346,431,346,421,345,411,344,401,343,391,342,381,340,372,338,362,336,352,333,344,328,337,320,337,310,343,302,351,297,361,294,370,291,380,290,390,288,400,287,410,286,420,285,430,285,440,284,450,284,460,283,470,283,480,283,490,283,500,283,510,283,520,284,530,284,540,285,550,286,560,287,570,289,579,290,589,292,599,294,608,298,617,303,621,312,623,322,620,331,612,338,604,344,597,350,585,360,585,360}, 
};

}
